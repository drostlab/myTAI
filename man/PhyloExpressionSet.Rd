% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/phyloset_base.R
\name{PhyloExpressionSet}
\alias{PhyloExpressionSet}
\title{PhyloExpressionSet S7 Class}
\usage{
PhyloExpressionSet(
  strata = stop("@strata is required"),
  gene_ids = stop("@gene_ids is required"),
  counts = stop("@counts is required"),
  groups = stop("@groups is required"),
  name = "Phylo Expression Set",
  species = character(0),
  index_type = "TXI",
  conditions_label = "Ontogeny",
  is_time_series = TRUE,
  null_conservation_sample_size = 5000L,
  precomputed_null_conservation_txis = NULL
)
}
\arguments{
\item{strata}{Factor vector of phylostratum assignments for each gene}

\item{gene_ids}{Character vector of gene identifiers}

\item{counts}{Matrix of expression counts with genes as rows and samples as columns}

\item{groups}{Factor vector indicating which group each sample belongs to}

\item{name}{Character string naming the dataset (default: "Phylo Expression Set")}

\item{species}{Character string indicating the species (default: NULL)}

\item{index_type}{Character string indicating the type of transcriptomic index (default: "TXI")}

\item{conditions_label}{Character string labeling the conditions (default: "Ontogeny")}

\item{is_time_series}{Logical indicating if data represents a time series (default: TRUE)}

\item{null_conservation_sample_size}{Numeric sample size for null conservation tests (default: 5000)}

\item{precomputed_null_conservation_txis}{Precomputed null conservation TXIs (default: NULL)}
}
\description{
S7 class for storing and manipulating phylotranscriptomic expression data.
This class integrates phylostratum information with gene expression data across 
developmental stages or conditions.
}
\details{
The PhyloExpressionSet class provides computed properties including:
- `counts_collapsed`: Expression data collapsed across replicates
- `data`: Complete dataset as a tibble
- `pTXI`: Phylostratum-specific transcriptomic index values
- `TXI`: Overall transcriptomic index per condition
- `conditions`: Factor of condition names
- `num_genes`, `num_conditions`, `num_strata`: Counts of dataset dimensions
}
\examples{
# Create a PhyloExpressionSet from data
# phyex_set <- as_PhyloExpressionSet(my_data)

}
